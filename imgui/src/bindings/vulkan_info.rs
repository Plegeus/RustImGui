/* automatically generated by rust-bindgen 0.72.1 */

#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct vulkan_info {
    pub instance: *mut ::std::os::raw::c_void,
    pub physical_device: *mut ::std::os::raw::c_void,
    pub device: *mut ::std::os::raw::c_void,
    pub queue_familty: ::std::os::raw::c_int,
    pub queue: *mut ::std::os::raw::c_void,
    pub min_image_count: ::std::os::raw::c_int,
    pub actual_image_count: ::std::os::raw::c_int,
    pub color_attachment_format: ::std::os::raw::c_int,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of vulkan_info"][::std::mem::size_of::<vulkan_info>() - 56usize];
    ["Alignment of vulkan_info"][::std::mem::align_of::<vulkan_info>() - 8usize];
    ["Offset of field: vulkan_info::instance"]
        [::std::mem::offset_of!(vulkan_info, instance) - 0usize];
    ["Offset of field: vulkan_info::physical_device"]
        [::std::mem::offset_of!(vulkan_info, physical_device) - 8usize];
    ["Offset of field: vulkan_info::device"][::std::mem::offset_of!(vulkan_info, device) - 16usize];
    ["Offset of field: vulkan_info::queue_familty"]
        [::std::mem::offset_of!(vulkan_info, queue_familty) - 24usize];
    ["Offset of field: vulkan_info::queue"][::std::mem::offset_of!(vulkan_info, queue) - 32usize];
    ["Offset of field: vulkan_info::min_image_count"]
        [::std::mem::offset_of!(vulkan_info, min_image_count) - 40usize];
    ["Offset of field: vulkan_info::actual_image_count"]
        [::std::mem::offset_of!(vulkan_info, actual_image_count) - 44usize];
    ["Offset of field: vulkan_info::color_attachment_format"]
        [::std::mem::offset_of!(vulkan_info, color_attachment_format) - 48usize];
};
pub type VulkanInfo = vulkan_info;
